server_tokens off;

server {

    listen       80 default_server;
    server_name  _;

    # /appと/sockjs-nodeへのアクセスをvue-cli-service(app:8080)へ流す(開発用)
    location ~* ^(/app/|/sockjs-node/) {
        proxy_pass http://app:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # rootディレクトリにマッチするファイルがなければ@node(app:3000)へ流す
    location / {
        root /opt/myapp/src/public;
        try_files $uri $uri/index.html @node;
        access_log off;
        add_header Cache-Control 'private no-cache';
        #expires 30d;
    }

    location @node {
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        proxy_hide_header X-Powered-By;
        proxy_ignore_headers Expires;
    }
}


####################################
#  /etc/nginx/nginx.conf           #
####################################

# user  nginx;
# worker_processes  1;
#
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
#
# events {
#     worker_connections  1024;
# }
#
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#
#     access_log  /var/log/nginx/access.log  main;
#
#     sendfile        on;
#     #tcp_nopush     on;
#
#     keepalive_timeout  65;
#
#     #gzip  on;
#
#     include /etc/nginx/conf.d/*.conf;
# }


####################################
#  /etc/nginx/conf.d/default.conf  #
####################################

# server {
#     listen       80;
#     server_name  localhost;
#
#     #charset koi8-r;
#     #access_log  /var/log/nginx/host.access.log  main;
#
#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }
#
#     #error_page  404              /404.html;
#
#     # redirect server error pages to the static page /50x.html
#     #
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }
#
#     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#     #
#     #location ~ \.php$ {
#     #    proxy_pass   http://127.0.0.1;
#     #}
#
#     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#     #
#     #location ~ \.php$ {
#     #    root           html;
#     #    fastcgi_pass   127.0.0.1:9000;
#     #    fastcgi_index  index.php;
#     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#     #    include        fastcgi_params;
#     #}
#
#     # deny access to .htaccess files, if Apache's document root
#     # concurs with nginx's one
#     #
#     #location ~ /\.ht {
#     #    deny  all;
#     #}
# }